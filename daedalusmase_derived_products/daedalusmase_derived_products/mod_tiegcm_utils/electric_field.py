"""
sub_Heating_Sources.electric_field

**Description**:
_____________________________________________________________________________________________________________________

Calculate electric field from ExB
_____________________________________________________________________________________________________________________
_____________________________________________________________________________________________________________________

**Inputs**:
_____________________________________________________________________________________________________________________

Ui: ExB velocity vector in m/s [ENU]

Un: Neutral velocity vector in m/s [ENU]

B_enu: Geomagnetic field vector in T [ENU]
_____________________________________________________________________________________________________________________
_______________________________________________________________________________________________________________________

**Outputs**:
_____________________________________________________________________________________________________________________

Evi: Electric field vector in V/m [ENU]

E_vert: Perpendicular electric field vector in V/m [ENU]

Estar: Perpendicular electric field vector in V/m in neutral reference frame
_____________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________

**Reference**:
_____________________________________________________________________________________________________________________

______________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________

"""

import numpy as np

def electric_field(Ui,Un,B_enu):    

    bnorm=np.sqrt(B_enu[0]*B_enu[0]+B_enu[1]*B_enu[1]+B_enu[2]*B_enu[2])
    bunit=[B_enu[0]/bnorm,B_enu[1]/bnorm,B_enu[2]/bnorm]
    Evi=-np.cross(Ui,B_enu)
    Unvert=np.cross(Un,bunit)
    Estar=Evi+np.cross(Unvert,B_enu)

    return Evi,Estar


