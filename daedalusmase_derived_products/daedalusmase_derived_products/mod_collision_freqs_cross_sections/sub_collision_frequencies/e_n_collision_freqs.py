"""
**sub_heating_sources.e_n_collision_freqs**

**Description**:
_____________________________________________________________________________________________________________________

Calculate electron-neutral collision frequencies
_____________________________________________________________________________________________________________________
_____________________________________________________________________________________________________________________

**Inputs**:
_____________________________________________________________________________________________________________________

`B_enu`: magnetic field in T in ENU

`NN2`: \(N_2\) density in \(cm^{-3}\)

`NO2`: \(O_2\) density in \(cm^{-3}\)

`NO`: \(O\) density in \(cm^{-3}\)

`helium_f`: \(He\) density in \(cm^{-3}\)

`Te`: electron temperature in K
_____________________________________________________________________________________________________________________
_______________________________________________________________________________________________________________________

**Outputs**:
_____________________________________________________________________________________________________________________

`ven`: electron-neutral collision frequency

`ve_n2`: electron- \(N_2\) collision frequency

`ve_o`: electron- \(O\) collision frequency

`ve_o2`: electron- \(O_2\) collision frequency

`ve_he`: electron- \(He\) collision frequency

`rnu_ne`: factor
_____________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________

**Reference**:
_____________________________________________________________________________________________________________________

Schunk, R. and Nagy, A. (2009). Ionospheres: physics, plasma physics, and chemistry (Cambridge
university press)
______________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________

"""

import numpy as np

def e_n_collision_freqs(B_enu,NN2,NO2,NO,helium_f,Te):
    bnorm=np.sqrt(B_enu[0]*B_enu[0]+B_enu[1]*B_enu[1]+B_enu[2]*B_enu[2])
    bgauss=bnorm*10000
    qeomeo10=1.7588028*10**7
    
    omega_e=qeomeo10*bgauss
    omega_e_inv=1/omega_e
    
    ven=(2.33 * (10**(-11))*NN2*Te*(1-(1.21*(10**(-4)*Te))) \
        + 1.82 * (10**(-10))*NO2*np.sqrt(Te)*(1+(3.6*(10**(-2)*np.sqrt(Te)))) \
        +8.9 * (10**(-11))*NO*np.sqrt(Te)*(1+(5.7*(10**(-4)*Te))) \
        +4.6* (10**(-10))*helium_f*np.sqrt(Te))

    ve_n2=2.33 * (10**(-11))*NN2*Te*(1-(1.21*(10**(-4)*Te)))
    ve_o=8.9 * (10**(-11))*NO*np.sqrt(Te)*(1+(5.7*(10**(-4)*Te)))
    ve_o2=1.82 * (10**(-10))*NO2*np.sqrt(Te)*(1+(3.6*(10**(-2)*np.sqrt(Te))))
    ve_he=4.6* (10**(-10))*helium_f*np.sqrt(Te)
    rnu_ne=(2.33 * (10**(-11))*NN2*Te*(1-(1.21*(10**(-4)*Te))) \
        + 1.82 * (10**(-10))*NO2*np.sqrt(Te)*(1+(3.6*(10**(-2)*np.sqrt(Te)))) \
        +8.9 * (10**(-11))*NO*np.sqrt(Te)*(1+(5.7*(10**(-4)*Te))))*omega_e_inv
    rnu_ne=4*rnu_ne    
    return ven, ve_n2, ve_o, ve_o2, ve_he, rnu_ne
