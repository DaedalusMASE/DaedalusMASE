"""
sub_Heating_Sources.igrf_B

**Description**:
_____________________________________________________________________________________________________________________

Calculate IGRF magnetic field in ENU and ECEF
_____________________________________________________________________________________________________________________
_____________________________________________________________________________________________________________________

**Inputs**:
_____________________________________________________________________________________________________________________

time_p: time (datetime object) 

lat_p: latitude in deg 

lon_p: longitude in deg 

alt_p: altitude in km
_____________________________________________________________________________________________________________________
_______________________________________________________________________________________________________________________

**Outputs**:
_____________________________________________________________________________________________________________________

B_enu: Magnetic field vector in ENU

b_unit_enu: Magnetic field unit vector in ENU
_____________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________

**Reference**:
_____________________________________________________________________________________________________________________

______________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________

"""

import numpy as np
import iri2016

def run_iri(time_p, lat_p, lon_p, alt_p):    
    altkmrange = (alt_p, alt_p, 10.0)
    iri = iri2016.IRI(time_p, altkmrange, lat_p, lon_p)
    ne=iri["ne"].values[0]
    Tn=iri["Tn"].values[0]
    Ti=iri["Ti"].values[0]
    Te=iri["Te"].values[0]

    Op=iri["nO+"].values[0]
    O2p=iri["nO2+"].values[0]
    NOp=iri["nNO+"].values[0]
    Np=iri["nN+"].values[0]

    return ne, Op, O2p, NOp, Np, Tn, Ti, Te
